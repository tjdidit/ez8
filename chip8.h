#ifndef CHIP_8_H
#define CHIP_8_H

#define MEMORY 4096

#include <stdint.h>

uint8_t chip8_fontset[80] =
{
    0xF0, 0x90, 0x90, 0x90, 0xF0, //0
    0x20, 0x60, 0x20, 0x20, 0x70, //1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
    0x90, 0x90, 0xF0, 0x10, 0x10, //4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
    0xF0, 0x10, 0x20, 0x40, 0x40, //7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
    0xF0, 0x90, 0xF0, 0x90, 0x90, //A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
    0xF0, 0x80, 0x80, 0x80, 0xF0, //C
    0xE0, 0x90, 0x90, 0x90, 0xE0, //D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
    0xF0, 0x80, 0xF0, 0x80, 0x80  //F
};


typedef struct Chip8
{
    uint16_t opcode;
    uint8_t V[0x10]; // "v" registers
    uint16_t I; // I - index register
    uint8_t keys[0x10];

    uint16_t gfx[64*32];

    uint8_t delay_timer;
    uint8_t sound_timer;

    uint8_t memory[MEMORY];
    
    uint16_t stack[0x10];
    uint16_t sp;
    uint16_t pc;

    FILE* rom;

} Chip8;

#endif